package org.usfirst.frc4914.threestagevision.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.command.PIDCommand;

/**
 *
 */
public class TrackTarget extends PIDCommand {
	private PIDController pid;
    public TrackTarget() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	pid = new PIDController(20, 0, 0, new PIDSource() {
 			PIDSourceType m_sourceType = PIDSourceType.kDisplacement;

 			public double pidGet() {
 				return Robot.motorizedArm.getEncoder();
 			}

 			@Override
 			public void setPIDSourceType(PIDSourceType pidSource) {
 				m_sourceType = pidSource;
 			}

 			@Override
 			public PIDSourceType getPIDSourceType() {
 				return m_sourceType;
 			}
 		}, new PIDOutput() {
 			public void pidWrite(double d) {
 				Robot.motorizedArm.setMotors(d);
 			}
 		});
 		pid.setAbsoluteTolerance(0.01);
 		pid.setSetpoint(m_setpoint);
 		pid.setOutputRange(-0.3, 0.3);
 		
 		// Get everything in a safe starting state.
 		Robot.motorizedArm.stop();
 		pid.reset();
 		pid.enable();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
